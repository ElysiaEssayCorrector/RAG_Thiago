version: '3.8'

services:
  # API Gateway
  api:
    build: 
      context: .
      dockerfile: Dockerfile.api
    ports:
      - "8000:8000"
    environment:
      - MONGODB_URI=mongodb://mongodb:27017/elysia
      - REDIS_URI=redis://redis:6379
      - ELASTICSEARCH_URI=http://elasticsearch:9200
      - OBJECT_STORAGE_ENDPOINT=${OBJECT_STORAGE_ENDPOINT}
      - OBJECT_STORAGE_ACCESS_KEY=${OBJECT_STORAGE_ACCESS_KEY}
      - OBJECT_STORAGE_SECRET_KEY=${OBJECT_STORAGE_SECRET_KEY}
      - OBJECT_STORAGE_BUCKET=elysia-redacoes
    depends_on:
      - mongodb
      - redis
      - elasticsearch
    volumes:
      - ./app:/app/app
    restart: unless-stopped

  # Worker Nodes (Processadores)
  worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
    environment:
      - MONGODB_URI=mongodb://mongodb:27017/elysia
      - REDIS_URI=redis://redis:6379
      - ELASTICSEARCH_URI=http://elasticsearch:9200
      - OBJECT_STORAGE_ENDPOINT=${OBJECT_STORAGE_ENDPOINT}
      - OBJECT_STORAGE_ACCESS_KEY=${OBJECT_STORAGE_ACCESS_KEY}
      - OBJECT_STORAGE_SECRET_KEY=${OBJECT_STORAGE_SECRET_KEY}
      - OBJECT_STORAGE_BUCKET=elysia-redacoes
    depends_on:
      - mongodb
      - redis
      - elasticsearch
    deploy:
      replicas: 3
      resources:
        limits:
          cpus: '1'
          memory: 2G
    volumes:
      - ./app:/app/app
    restart: unless-stopped

  # MongoDB - para metadados e resultados processados
  mongodb:
    image: mongo:6.0
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    restart: unless-stopped
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
    command: --wiredTigerCacheSizeGB 1.5

  # Redis - para filas e cache
  redis:
    image: redis:7.0-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --save 60 1 --loglevel warning --maxmemory 1gb --maxmemory-policy allkeys-lru

  # Elasticsearch - para busca avan√ßada
  elasticsearch:
    image: elasticsearch:8.8.0
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    restart: unless-stopped

  # MinIO - object storage local para desenvolvimento
  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    command: server /data --console-address ":9001"
    restart: unless-stopped

  # Interface administrativa
  mongo-express:
    image: mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_ROOT_USER}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_ROOT_PASSWORD}
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=elysia_secret_password
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_MONGODB_AUTH_DATABASE=admin
    depends_on:
      - mongodb

volumes:
  mongodb_data:
  redis_data:
  elasticsearch_data:
  minio_data:
